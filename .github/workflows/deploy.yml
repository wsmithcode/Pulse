name: Deploy to Server

on:
    push:
        branches:
            - main
    workflow_run:
        workflows: ["Docker Image CI"]
        types:
            - completed

jobs:
    deploy:
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        env:
          AWS_INSTANCE_SG_ID: ${{ secrets.AWS_INSTANCE_SG_ID }}

        steps:

            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: eu-west-3

            - name: Get Runner IP Address
              id: runner_ip
              uses: haythem/public-ip@v1.2

            - name: whitelist runner ip address
              run: |
                aws ec2 authorize-security-group-ingress \
                  --group-id $AWS_INSTANCE_SG_ID \
                  --protocol tcp \
                  --port 22 \
                  --cidr ${{ steps.runner_ip.outputs.ipv4 }}/32

            - name: Set up SSH Agent
              uses: webfactory/ssh-agent@v0.5.4
              with:
                ssh-private-key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}

            - name: Configure SSH Alias
              run: |
                mkdir -p ~/.ssh
                echo "Host deploy_server" >> ~/.ssh/config
                echo "  HostName ${{ secrets.DEPLOY_HOST }}" >> ~/.ssh/config
                echo "  User ${{ secrets.DEPLOY_USER }}" >> ~/.ssh/config
                echo "  StrictHostKeyChecking no" >> ~/.ssh/config

            - name: Copy Deploy Path to server
              run: |
                cd deploy && scp -r * deploy_server:${{ secrets.DEPLOY_PATH }}

            - name: Execute Deployment
              run: |
                ssh deploy_server "cd ${{ secrets.DEPLOY_PATH }} && make deploy"

            - name: revoke runner ip address
              if: ${{ always() }}
              run: |
                aws ec2 revoke-security-group-ingress \
                  --group-id $AWS_INSTANCE_SG_ID \
                  --protocol tcp \
                  --port 22 \
                  --cidr ${{ steps.runner_ip.outputs.ipv4 }}/32